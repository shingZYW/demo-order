<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demoorder.Mapper.ShingTestMapper">




    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Jul 11 09:50:50 CST 2018.
        -->
        id,name,one,two,three,four,five
    </sql>
    <select id="executeSql" parameterType="String" >
       INSERT INTO shing_test(id,NAME,COMMENT,STATUS) VALUES (7,'1003','shingtest',1);


  </select>


    <insert id="add" parameterType="com.example.demoorder.entity.ShingTest">
         INSERT INTO shing_test(id,NAME,COMMENT,STATUS) VALUES (#{id},#{name},#{comment},#{status});

    </insert>

<select id="testUnion"  resultType="java.util.Map">
--测试 select *,union，group by，sum:
    SELECT * FROM (
    SELECT id,b_id AS union_id,'tableA' AS NAME ,SUM(age) AS age_sum FROM
    table_a WHERE id=1 AND b_id=1 GROUP BY id,b_id
    UNION
    SELECT id,c_id,a_name,SUM(age) AS age_sum FROM table_b
    WHERE id=1 AND c_id=2 GROUP BY id,c_id
    UNION
    SELECT a.id,12 AS union_id,100 AS NAME,b.age/a.age AS age_sum FROM
    (SELECT id,d_id,age,
    SUM(age) AS age_sum FROM table_c WHERE id=1 AND d_id=1 GROUP BY
    id,d_id) a LEFT JOIN (SELECT e_id,id,SUM(age) AS age
    FROM table_d WHERE id=1 GROUP BY id) b ON a.id=b.id
  ) d WHERE d.id=1;

</select>

    <select id ="testSum" resultType="java.util.Map">
-- 测试sum and case
       SELECT
         SUM(CASE WHEN t.comment='cat' AND t.age = 18 THEN 1 ELSE 0 END) AS numOfCat,
         SUM(CASE WHEN t.comment='dog' AND t.age = 18 THEN 1 ELSE 0 END) AS numOfDog
         FROM table_a t WHERE  t.b_id=#{id}

</select>


    <select id ="testInSelect" resultType="java.util.Map">
-- 测试in select
SELECT  `comment`,a_name as name FROM table_b WHERE 1=1 AND id IN (SELECT b_id FROM table_a)
    </select>

    <select id ="testNJoin" resultType="java.util.Map">
-- 测试多个join,并且含有时间计算以及基本运算
        SELECT b.a_name AS AName,
        c.b_name AS BName,
        d.c_name AS CName,
        e.d_name AS DName,
        e.e_name AS EName,
        UNIX_TIMESTAMP( a.create_time ) - UNIX_TIMESTAMP( b.create_time ) AS ABtime,
        DATE_FORMAT(a.create_time, '%Y-%m-%d') AS ATime
        FROM table_a a
        JOIN table_b b
        ON a.b_id=b.id
        JOIN table_c c
        ON b.c_id=c.id
        JOIN table_d d
        ON c.d_id=d.id
        JOIN table_e e
        ON d.e_id=e.id
        WHERE 1=1 AND a.age &lt;(SELECT
        MAX(table_b.age)
        FROM table_b
        )
    </select>



</mapper>
